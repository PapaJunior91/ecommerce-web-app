import { Injectable } from '@angular/core'
import * as $ from 'jquery'
import jsPDF from 'jspdf'
import autoTable from 'jspdf-autotable'
import * as FileSaver from 'file-saver'
import * as xlsx from 'xlsx'
import { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';
import { ApiService } from './api.service'

import * as moment from 'moment';



@Injectable({
  providedIn: 'root'
})
export class CustomFunctionService {

  username = localStorage.getItem('username')
  role = localStorage.getItem('role')

  status: OnlineStatusType;

  constructor(
    private onlineStatusService: OnlineStatusService,
    private ApiService: ApiService
  ) { }

  exportExcel(report_type, _objectOrder) {   
    const worksheet = xlsx.utils.json_to_sheet(_objectOrder); // Sale Data
    const workbook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };
    const excelBuffer: any = xlsx.write(workbook, { bookType: 'xlsx', type: 'array' });
    let EXCEL_TYPE =
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8";
    let EXCEL_EXTENSION = ".xlsx";
    const data: Blob = new Blob([excelBuffer], {
      type: EXCEL_TYPE
    });
    FileSaver.saveAs(
      data,
      report_type + new Date().getTime() + EXCEL_EXTENSION
    );
  }

  exportPdf(report_type, header, _objectOrder, tdr_agent_name=null) {

    let username = this.username

    // let creationDate = this.dateTime
    // let date1 = this.date1
    // let date2 = this.date2

    const arrayToExport = _objectOrder.map(Object.values);

    const doc = new jsPDF()

    autoTable(doc, {
      head: [header],
      body: arrayToExport,
      startY: 60,
      margin: { horizontal: 10, top: 55 },
      bodyStyles: { valign: "top" },
      showHead: "everyPage",
      didDrawPage: function (data) {
        // title
        doc.setFontSize(15);
        doc.setTextColor(40);
        doc.text(report_type, 10, 25);

        doc.setFontSize(8);
        doc.text("Report date range: " + '' + "," + '', 10, 40);
        doc.text("Creation time: " + '', 10, 45);
        doc.text("Generated by: " + username, 10, 50);

        // Footer
        var str = "Page " + doc.getNumberOfPages();

        doc.setFontSize(10);
        var pageSize = doc.internal.pageSize;
        var pageHeight = pageSize.height
          ? pageSize.height
          : pageSize.getHeight();
        doc.text(str, data.settings.margin.left, pageHeight - 10);
      },


    })

    doc.save(`${report_type}.pdf`);
  }

  clearInput(id){
    return $('#'+id).val('')
  }
  
  closeDropdown(id){
    $('#'+id).css("display", "none");
  }

  checkConnectivity(){
    this.onlineStatusService.status.subscribe((status: OnlineStatusType) => {
      // Retrieve Online status Type
      this.status = status
    })
    return this.status
  }

  formatCurrency(currency){
    return new Intl.NumberFormat('en-TZ').format(currency)
  }

  formatDate(date:any){
    return moment(date).format("MMM Do YYYY")
  }

  openDropdown(id){
    $('#'+id).css("display", "block");  
  }

}
